============   Installation ===================

sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg-agent \
    software-properties-common
    
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add - 
sudo apt-key fingerprint 0EBFCD88

sudo add-apt-repository \
   "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
   $(lsb_release -cs) \
   stable"
   
sudo apt-get update
sudo apt-get install docker-ce docker-ce-cli containerd.io

===============================
images 
	sudo docker pull portainer/portainer-ce
		sudo docker run -d -p 8000:8000 -p 9000:9000 --name=portainer --restart=always -v /var/run/docker.sock:/var/run/docker.sock -v portainer_data:/data portainer/portainer-ce
		http://localhost:9000 ->  admin/12345678
		
	sudo docker pull store/oracle/database-enterprise:12.2.0.1
	
		https://hub.docker.com/u/itzravirathi/content/sub-eff64288-bd1f-4dca-9301-bb5665b602e7
	
		sudo docker run -d -it -p 1521:1521 --name 12.2.0.1 store/oracle/database-enterprise:12.2.0.1
	
		ORCLCDB=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=<ip-address>)(PORT=<port>)),
    (CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=ORCLCDB.localdomain)))     ,
ORCLPDB1=(DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(HOST=<ip-address>)(PORT=<port>)),
    (CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=ORCLPDB1.localdomain))) 
    
		sqlplus sys/Oradoc_db1@ORCLCDB as sysdba
	
		connect sys/Oradoc_db1@ORCLPDB1 as sysdba

		sqlplus spring/spring@ORCLPDB1.localdomain
===============================	


https://github.com/jleetutorial/dockerapp


download and run a image/containter
	sudo docker run hello-world
	
download and run a image/containter, then run a command exmple bash
	sudo docker run -it ubuntu bash


============   IMAGES ===================
sudo docker images



============   CONTAINER ===================
sudo docker ps -a



============   OPERATION ===================

start a container
	sudo docker start 1154e70a3bdd
	portainer/portaine -> admin/portainer
stop a container
	sudo docker stop 1154e70a3bdd
restart a container
	sudo docker restart 1154e70a3bdd

inspect container
	sudo docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' container_name_or_id

Docker port mapping
	sudo docker run -it -p 8888:8080 tomcat:8.0
	
run a command in Docker
	sudo docker exec -it 1154e70a3bdd bash
	
ports mapping for a container
	docker port <container-id>

============   CREATION ===================

docker commit 1154e70a3bdd rathi/debian:1.00


============   build ===================

	FROM debian:jessie
	RUN apt-get update
	RUN apt-get install -y git
	RUN apt-get install -y vim

docker build -t rathi/debian .

create link between two container
	sudo docker run -d -p 5000:5000 --link redis ad26e3e6e350
